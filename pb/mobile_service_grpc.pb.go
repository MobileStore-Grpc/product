// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// MobileServiceClient is the client API for MobileService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type MobileServiceClient interface {
	CreateMobile(ctx context.Context, in *CreateMobileRequest, opts ...grpc.CallOption) (*CreateMobileResponse, error)
}

type mobileServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMobileServiceClient(cc grpc.ClientConnInterface) MobileServiceClient {
	return &mobileServiceClient{cc}
}

func (c *mobileServiceClient) CreateMobile(ctx context.Context, in *CreateMobileRequest, opts ...grpc.CallOption) (*CreateMobileResponse, error) {
	out := new(CreateMobileResponse)
	err := c.cc.Invoke(ctx, "/pb.MobileService/CreateMobile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MobileServiceServer is the server API for MobileService service.
// All implementations must embed UnimplementedMobileServiceServer
// for forward compatibility
type MobileServiceServer interface {
	CreateMobile(context.Context, *CreateMobileRequest) (*CreateMobileResponse, error)
	mustEmbedUnimplementedMobileServiceServer()
}

// UnimplementedMobileServiceServer must be embedded to have forward compatible implementations.
type UnimplementedMobileServiceServer struct {
}

func (UnimplementedMobileServiceServer) CreateMobile(context.Context, *CreateMobileRequest) (*CreateMobileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMobile not implemented")
}
func (UnimplementedMobileServiceServer) mustEmbedUnimplementedMobileServiceServer() {}

// UnsafeMobileServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to MobileServiceServer will
// result in compilation errors.
type UnsafeMobileServiceServer interface {
	mustEmbedUnimplementedMobileServiceServer()
}

func RegisterMobileServiceServer(s grpc.ServiceRegistrar, srv MobileServiceServer) {
	s.RegisterService(&MobileService_ServiceDesc, srv)
}

func _MobileService_CreateMobile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMobileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MobileServiceServer).CreateMobile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.MobileService/CreateMobile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MobileServiceServer).CreateMobile(ctx, req.(*CreateMobileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// MobileService_ServiceDesc is the grpc.ServiceDesc for MobileService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var MobileService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pb.MobileService",
	HandlerType: (*MobileServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateMobile",
			Handler:    _MobileService_CreateMobile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mobile_service.proto",
}
